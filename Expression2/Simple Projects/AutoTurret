@name Turret
@inputs [WireMod_turret Target]:entity WhiteList:array
@outputs Fire
@persist I [ Major_plate Rot Turret Rotor ]:entity Ready 
@persist Pitch Yaw Rotar DelayBy_rotor Rotary Target_pos:vector Target:entity
@model models/hunter/plates/plate1x1.mdl

if( first() | dupefinished())
{
    
    setName( "Turret" + toChar( 0 ) )
    
    Major_plate = entity()
    
    local I = 0
    
    while( I < 7 )
    {
        
        I++
        
        timer( I:toString() , 500 * I )
        
    }
    
    function hydro( A , B , C , D , Entity_base:entity , Position:vector , Target_entity:entity , VectorByTarget:vector , Can )
    {
        
        local Target = Target_entity:toWorld( VectorByTarget )
        
        local Pos = Entity_base:toWorld( Position )
        
        if( changed( Can ) && Can )
        {
            
            local Basis = holoCreate( A , Pos , vec( 0.5 ) , Entity_base:toWorld(ang()) , vec4( 255 ) , "models/holograms/hq_icosphere.mdl" ) holoParent( A , Entity_base )
            
            holoCreate( B , Basis:toWorld( vec( -3 , 0 , 0 ) ) , vec( 0.3 , 0.3 , 0.5 ) , Basis:toWorld(ang( 90 , 0 , 0 )) , vec4( 255 ) , "models/holograms/hq_rcylinder.mdl" ) holoParent( B , Basis )
            
            holoCreate( C , Basis:toWorld( vec() ) , vec( 1 ) , Basis:toWorld(ang( -90 , 0 , 0 )) , vec4( 255 ) , "models/hunter/tubes/tube1x1x1.mdl" ) holoParent( C , Basis )
            
            holoCreate( D , Target , vec( 0.5 ) , Target_entity:toWorld(ang()) , vec4( 255 ) , "models/holograms/hq_icosphere.mdl" ) holoParent( D , Target_entity )
            
            holoMaterial( A , "sprops/textures/sprops_rubber2" )
            
            holoMaterial( B , "sprops/textures/sprops_rubber2" )
            
            holoMaterial( C , "sprops/textures/sprops_chrome" )
            
            holoMaterial( D , "sprops/textures/sprops_rubber2" )

        }
        
        holoAng( A , ( Pos - Target ):toAngle() )
        
        local Dist = Pos:distance( Target )
        
        holoScaleUnits( C , vec( 3 , 3 , Dist ) )
        
    }
    
}

interval(60)

if( clk( "1" ) )
{
    
  local Base = Major_plate 
    	
                #Rot
		I++ Rot = holoCreate(I,Base:toWorld(vec(0, 0, 1.8)),vec(3.9, 3.9, 0.1),Base:toWorld(ang(0, 0, 0)),vec(255, 255, 255),"models/holograms/hq_rcylinder_thin.mdl") holoMaterial(I,"") holoParent(I, Base) holoAlpha(I, 255)
	
                #Turret
		I++ Turret = holoCreate(I,Base:toWorld(vec(0, 0, 30)),vec(2, 1, 1),Base:toWorld(ang(0, 0, 0)),vec(255, 255, 255),"models/holograms/cube.mdl") holoMaterial(I,"") holoParent(I, Rot) holoAlpha(I, 255)
	
                #Rotor
		I++ Rotor = holoCreate(I,Base:toWorld(vec(34.2964, 0, 30)),vec(3, 3, 3),Base:toWorld(ang(0, -90, 90)),vec(72, 72, 72),"models/maxofs2d/light_tubular.mdl") holoMaterial(I,"") holoParent(I, Turret) holoAlpha(I, 255)

                #EyeUp
		I++ holoCreate(I,Base:toWorld(vec(14.835, 9.009, 30)),vec(0.06, 0.06, 0.06),Base:toWorld(ang(90, 0, 0)),vec(255, 255, 255),"models/props_phx/construct/metal_dome180.mdl") holoMaterial(I,"") holoParent(I, Turret) holoAlpha(I, 255)
			
                #EyeDown
		I++ holoCreate(I,Base:toWorld(vec(14.835, 9.009, 30)),vec(0.06, 0.06, 0.06),Base:toWorld(ang(-90, 0, 180)),vec(255, 255, 255),"models/props_phx/construct/metal_dome180.mdl") holoMaterial(I,"") holoParent(I, Turret) holoAlpha(I, 255)
		
}

if( clk( "2" ) )
{
    
  local Base = Major_plate 
    
                #trashbina
		I++ holoCreate(I,Base:toWorld(vec(0, 0, 3.2773)),vec(0.3, 0.5, 1),Base:toWorld(ang(-90, 0, 0)),vec(255, 255, 255),"models/props_junk/TrashBin01a.mdl") holoMaterial(I,"") holoParent(I, Rot) holoAlpha(I, 255)
	
                #trashbina (1)
		I++ holoCreate(I,Base:toWorld(vec(0, 0, 3.2773)),vec(0.3, 0.5, 1),Base:toWorld(ang(-90, 90, 0)),vec(255, 255, 255),"models/props_junk/TrashBin01a.mdl") holoMaterial(I,"") holoParent(I, Rot) holoAlpha(I, 255)

                #trashbina (2)
		I++ holoCreate(I,Base:toWorld(vec(0, 0, 3.2773)),vec(0.3, 0.5, 1),Base:toWorld(ang(-90, -90, 0)),vec(255, 255, 255),"models/props_junk/TrashBin01a.mdl") holoMaterial(I,"") holoParent(I, Rot) holoAlpha(I, 255)
	
                #trashbina (3)
		I++ holoCreate(I,Base:toWorld(vec(0, 0, 3.2773)),vec(0.3, 0.5, 1),Base:toWorld(ang(-90, 180, 0)),vec(255, 255, 255),"models/props_junk/TrashBin01a.mdl") holoMaterial(I,"") holoParent(I, Rot) holoAlpha(I, 255)
	
                #Gear
		I++ holoCreate(I,Base:toWorld(vec(0, 0, -0.732)),vec(0.4, 0.4, 0.3),Base:toWorld(ang(0, 5.3, 0)),vec(255, 255, 255),"models/Mechanics/gears/gear24x6_large.mdl") holoMaterial(I,"") holoParent(I, Rot) holoAlpha(I, 255)

                #hq rcylinder thick
		I++ holoCreate(I,Base:toWorld(vec(0, -10.123, 30)),vec(1, 1, 2.8),Base:toWorld(ang(90, 180, 180)),vec(255, 255, 255),"models/holograms/hq_rcylinder_thick.mdl") holoMaterial(I,"") holoParent(I, Turret) holoAlpha(I, 255)

                #bomb debris 
		I++ holoCreate(I,Base:toWorld(vec(0, -5.833, 30)),vec(0.53, 2.6, 1),Base:toWorld(ang(90, -90, 0)),vec(255, 255, 255),"models/combine_helicopter/bomb_debris_2.mdl") holoMaterial(I,"") holoParent(I, Turret) holoAlpha(I, 255)
	
                #hq tube thin
		I++ holoCreate(I,Base:toWorld(vec(12.835, 9.009, 30)),vec(0.5, 0.5, 0.6),Base:toWorld(ang(90, 0, 0)),vec(255, 255, 255),"models/holograms/hq_tube_thin.mdl") holoMaterial(I,"") holoParent(I, Turret) holoAlpha(I, 255)
	
                #bomb debris (1)
		I++ holoCreate(I,Base:toWorld(vec(0, 6.233, 30)),vec(0.53, 2.6, 2),Base:toWorld(ang(90, -90, 0)),vec(255, 255, 255),"models/combine_helicopter/bomb_debris_2.mdl") holoMaterial(I,"") holoParent(I, Turret) holoAlpha(I, 255)
	
                #hq cubinder
		I++ holoCreate(I,Base:toWorld(vec(-17.976, 0, 30)),vec(1, 1, 1),Base:toWorld(ang(-90, 0, 0)),vec(255, 255, 255),"models/holograms/hq_cubinder.mdl") holoMaterial(I,"") holoParent(I, Turret) holoAlpha(I, 255)
		  
}

if( clk( "3" ) )
{
    
  local Base = Major_plate 
    
                #Light
		I++ holoCreate(I,Base:toWorld(vec(-7.4485, 3.8216, 35.638)),vec(0.6, 0.6, 0.5),Base:toWorld(ang(0, 180, 180)),vec(255, 255, 255),"models/props_c17/light_cagelight01_on.mdl") holoMaterial(I,"") holoParent(I, Turret) holoAlpha(I, 255)
	
                #Rotor2
		I++ holoCreate(I,Base:toWorld(vec(34.2964, 0, 30)),vec(3, 3, 3),Base:toWorld(ang(0, 90, -90)),vec(72, 72, 72),"models/maxofs2d/light_tubular.mdl") holoMaterial(I,"") holoParent(I, Rotor) holoAlpha(I, 255)

                #hq dome
		I++ holoCreate(I,Base:toWorld(vec(-23.976, 0, 30)),vec(1, 1, 0.3),Base:toWorld(ang(-90, 0, 0)),vec(255, 255, 255),"models/holograms/hq_dome.mdl") holoMaterial(I,"") holoParent(I, Turret) holoAlpha(I, 255)
	
                #hq cubinder (1)
		I++ holoCreate(I,Base:toWorld(vec(17.976, 0, 30)),vec(1, 1, 1),Base:toWorld(ang(90, 0, 0)),vec(255, 255, 255),"models/holograms/hq_cubinder.mdl") holoMaterial(I,"") holoParent(I, Turret) holoAlpha(I, 255)
	
                #Eye
		I++ holoCreate(I,Base:toWorld(vec(14.635, 9.009, 30)),vec(0.48, 0.48, 0.48),Base:toWorld(ang(90, 0, 0)),vec(255, 0, 0),"models/holograms/hq_dome.mdl") holoMaterial(I,"") holoParent(I, Turret) holoAlpha(I, 255) holoDisableShading( I , 1 )

  local Ind = 0

  while( Ind < I && perf() )
  {
    
       Ind++
    
       if( Ind!= 16 && Ind!= 17 && Ind!= 20 && Ind!= 3 )
       {
    
            holoMaterial( Ind , "sprops/textures/sprops_rubber2" )
    
       }
    
  }
 
  Major_plate:setMaterial( "sprops/textures/sprops_rubber2" )

}

hydro( 21 , 22 , 23 , 24 , Rot , vec( 18 , 0 , 5 ) , Turret , vec( 20 , 0 , -5  ) , clk( "4" ) )

hydro( 25 , 26 , 27 , 28 , Rot , vec( -18 , 0 , 5 ) , Turret , vec( -20 , 0 , -5 ) , clk( "5" ) )

hydro( 29 , 30 , 31 , 32 , Rot , vec( 0 , 18 , 5 ) , Turret , vec( 0 , 10 , -5 ) , clk( "6" ) )

hydro( 33 , 34 , 35 , 36 , Rot , vec( 0 , -18 , 5 ) , Turret , vec( 0 , -10 , -5 ) , clk( "7" ) )

if( Ready )
{

    local TPS = Turret:pos()
    
    if( Target )
    {
        
        Target_pos = Target:boxCenterW() - TPS #+ Target:vel() / 5
        
    }
    
    local Aim = Turret:toLocal( ( Target_pos ):toAngle() ) / 1.3
    
    local Tar_pitch = Aim:pitch()
    
    local Tar_yaw = Aim:yaw()
    
    if( Pitch != Tar_pitch )
    {
        
        Pitch = Pitch + Tar_pitch
        
    }
    
    if( Yaw != Tar_yaw )
    {
        
        Yaw = Yaw + Tar_yaw
        
    }

    local Ranger = rangerOffset( 150000 , Turret:toWorld( vec( 60 , 0 , 0 ) ) , Turret:forward() )

    if( Ranger:entity() == Target ) #:pos():distance( Target:pos() ) < 200 )
    {
        
        if( changed( Ranger:entity() ) )
        {
            
            soundPlay( 1 , 100000 , "thrusters/jet01.wav" )
            
        }
        
        if( Rotar < 100 )
        {
            
            Rotar = Rotar + 2
            
        }
        
    }else{
    
        if( Rotar > 0 )
        {
            
            Rotar = Rotar - 2
            
        }
    
    }
    
    local PRCrotar = Rotar / 100
    
    soundPitch( 1 , PRCrotar * 200 )
    
    local EyeBrow = PRCrotar * 25
    
    Rotary = Rotary + Rotar
    
    DelayBy_rotor = DelayBy_rotor + PRCrotar
    
    if( DelayBy_rotor > 1 )
    {
        
        Fire = 1
        
        DelayBy_rotor = 0
        
    }else{
    
        Fire = 0
    
    }
    
    holoAng( 1 , Major_plate:toWorld( ang( 0 , Yaw , 0 ) ) )
    
    holoAng( 2 , Rot:toWorld( ang( Pitch , 0 , 0 ) ) )
    
    holoAng( 3 , Turret:toWorld( ang( Rotary , -90 , 90 ) ) )
    
    holoAng( 4 , Turret:toWorld( ang( 45 + EyeBrow , 0 , 0 ) ) )
    
    holoAng( 5 , Turret:toWorld( ang( -45 - EyeBrow , 0 , 180 ) ) )
    
    holoPos( 3 , Turret:toWorld(vec(32.2964 + 2 * DelayBy_rotor, 0, 0)) )
    
    if( changed( Target ) )
    {
        
        local Sound = ""
        
        if( Target )
        {
            
            Sound = "npc/roller/mine/rmine_predetonate.wav"
 
        }else{
        
            Sound = "npc/roller/mine/combine_mine_deactivate1.wav"
        
        }  
   
        soundPlay( 2 , 100 , Sound )
        
        soundPitch( 2 , 50 + random( 10 ) )        
    
    }
    
}

if( changed( WireMod_turret ) & WireMod_turret )
{
    
    WireMod_turret:setPos( Turret:toWorld( vec( 50 , 0 , 0 ) ) )
    
    WireMod_turret:setAng( Turret:toWorld( ang() ) )
    
    timer( "WireTurret_parent" , 1000 )
    
}

if( clk( "WireTurret_parent" ) )
{
    
    WireMod_turret:parentTo( Turret )
    
    WireMod_turret:setAlpha( 0 )

    Ready = 1
    
}





